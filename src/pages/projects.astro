---
import { Image } from "astro:assets";
import Navbar from "../components/Navbar.astro";

---
<html lang='en'>
  <head>
      <meta charset="UTF-8" />
      <meta name="description" content="Portfolio site for Craig Wagner" />
      <meta name="viewport" content="width=device-width" />
      <meta name="generator" content={Astro.generator} />
      <title>Craig's Projects</title>
  </head>
  <body>
    <Navbar />
    <div>
      <h1>Projects</h1>
    </div>
    <main>
      <h2>Current Projects</h2>
      <div class="project-container">
        <div class="pictures-container">
          <Image src="/blue-wave-screenshot-1.png" alt="Screenshot of Blue Wave America's logo and navbar on the homepage" width={500} height={300} />
          <Image src="/blue-wave-screenshot-2.png" alt="Additional screenshot of Blue Wave America's site showing a newsletter sign up form" width={500} height={300} />
        </div>
        <div class="project-description">
          <a href="https://www.bluewaveamerica.com/" target="_blank"><h3>Blue Wave America</h3></a>
          <p>
            Built using Astro + Tailwind and deployed on Netlify, Blue Wave America is a static website that provides information on the Super PAC with the same name. Still a work in progress, the site will continue to be upgraded when I am sent new content to populate it. (Note: The views and opinions of Blue Wave America are not my own)
          </p>
          <a href="https://github.com/craigbwagner/blue-wave-america" target="_blank" class="github-link">GitHub</a>
        </div>
      </div>
      <div class="project-container" id="character-sheet-container">
        <div class="project-description">
          <h3>Arcane Forge</h3>
          <p>
            My first foray in working with TypeScript, I'm using this project as an opportunity to learn strictly-typed programming along with Zustand + Immer for handling React state. Eventually, this Dungeons and Dragons tools app will allow the user to perform many of the basic functions offered by a site like DnD Beyond. Planned features include providing the ability for a user to create characters, save custom abilities, and add items that can subsequently be used for other characters or users. Future enhancements may include dungeon master tools, such as the ability to add monsters to the database, create encounters, track initiative, and keep track of enemy hitpoints.
          </p>
          <a href="https://github.com/craigbwagner/arcane-forge-frontend" target="_blank" class="github-link">GitHub</a>
        </div>
      </div>
      <h2>Past Projects</h2>
      <div class="project-container">
        <div class="pictures-container">
          <Image src="/spendsense-homepage.png" alt="Screenshot of spendsense homepage" width={700} height={300} />
          <Image src="/spendsense-dashboard.png" alt="Screenshot of spendsense dashboard" width={700} height={300} />
        </div>
        <div class="project-description">
          <a href="https://spendsense-frontend.netlify.app/" target="_blank"><h3>Spendsense</h3></a>
          <p>
            Developed in collaboration with a General Assembly classmate, Spendsense is a full-stack web application that allows users to track their spending habits. The frontend is built using React, Shadcn, Tailwind, and Zod. The backend runs on Python + Flask and Postgres for data storage. Users can create an account, log in, add transactions, and view their spending habits on a dashboard. User authentication is handled by JWT and Bcrypt, and the site is deployed on Netlify (Frontend) and Heroku (Backend). Known issues include a less-than-responsive design.
          </p>
          <a href="https://github.com/craigbwagner/spendsense-frontend" target="_blank" class="github-link">GitHub</a>
        </div>
      </div>
      <div class="project-container">
        <div class="pictures-container">
          <Image src="/crowdfunly-home.png" alt="Screenshot of crowdfunly homepage" width={700} height={300} />
          <Image src="/crowdfunly-campaign.png" alt="Screenshot of a crowdfunly campaign page" width={700} height={300} />
        </div>
        <div class="project-description">
          <a href="https://crowdfunly.netlify.app/" target="_blank"><h3>Crowdfunly</h3></a>
          <p>
            Created in collaboration with two fellow members of my General Assembly cohort, Crowdfunly is a full-stack web application that allows users to create and donate to crowdfunding campaigns. The frontend is built using React and features payment processing with Stripe. The backend runs on Node.js with Express and utilizes MongoDB as the database. Users can create an account, log in, create campaigns, and donate to campaigns. User authentication is handled by JWT and Bcrypt, and the site is deployed on Netlify (Frontend) and Heroku (Backend).
          </p>
          <a href="https://github.com/craigbwagner/crowdfunly-frontend" target="_blank" class="github-link">GitHub</a>
      </div>
    </main>
  </body>
</html>

<style>
  body {
		margin: auto;
		padding: 1rem;
		width: 80%;
    max-width: 1500px;
		color: #D1E8E2;
		font-size: 18px;
		line-height: 1.6;
    background-color: #2C3531;
	}

  main {
    display: flex;
    flex-direction: column;
    gap: 2em;
  }

	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
    margin-bottom: 1em;
	}

  h2 {
    font-size: 3rem;
		font-weight: 700;
		line-height: 1;
    margin-bottom: .5em;
    text-align: center;
  }

  h3 {
    font-size: 2rem;
		font-weight: 700;
		line-height: 1;
    margin-bottom: .5em;
    text-align: center;
  }

  p {
    margin-bottom: 1em;
  }

  a {
    color: #D9B08C;
    text-decoration: none;
  }

  a:hover {
    color: #FFCB9A;
  }

  .project-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    justify-content: center;
    gap: 4em;
    margin-bottom: 1em;
    padding: 2em;
    background-color: rgba(245, 251, 251, 0.123);
    border-radius: 10px;
  }

  .pictures-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 2em;
  }

  .project-description {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .github-link {
    margin-bottom: 1em;
  }

  #character-sheet-container {
    grid-template-columns: 1fr;
  }

  @media screen and (max-width: 1150px) {
    body {
      width: 90%;
    }

    .project-container {
      display: flex;
      flex-direction: column;
      gap: 2em;
    }
  }
</style>
